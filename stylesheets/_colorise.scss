// This is your framework's main stylesheet. Use it to import all default modules.
@import "compass/utilities/color/contrast";
@import "compass/typography/links";
$base-color:     #002b36 !default;
$alt-color: 	#586e75 !default;

$quiet-color:    #073642 !default;
$loud-color:     #657b83 !default;
$header-color:   #839496 !default;

$base-background: #fdf6e3 !default;
$alt-background:  #eee8d5 !default;

$header-background:    #93a1a1 !default;
$quiet-background:     darken($base-background, 6.67%) !default;
$loud-background:   darken($base-background, 13.33%) !default;

$link-color:         #268bd2 !default;
$link-hover-color:   #dc322f !default;
$link-focus-color:   #2aa198 !default;
$link-active-color:  #859900 !default;
$link-visited-color: #d33682 !default;

$base-table-header-color: #93a1a1 !default;
$base-table-stripe-color: #eee8d5 !default;

$colorise-pallete: $base-color $alt-color $quiet-color $loud-color $header-color $base-background $alt-background $quiet-background $loud-background $header-background $link-color $link-hover-color $link-focus-color $link-active-color $link-visited-color $base-table-header-color $base-table-stripe-color;


/** Calculate luma for a color **/
@function luma($color){
	@return round(
		((red($color)*299)+(green($color)*587)+(blue($color)*114))/1000
	);
}

/** Choose a color with a specified luma threshold... Vary based on lightness, then saturation. **/
@function luma-threshold($color, $threshold, $lighter: true){
	$h: hue($color); $s: saturation($color); $l: lightness($color);
	@if ($lighter){
		$l: 5;
	} @else {
		$l: 95;
	}
	$color: hsl($h, 100, $l);
	$notfound: (luma($color) - $threshold > 0) != $lighter;
	@while ($notfound){
		$color: hsl($h, 100, $l);
		@if ((luma($color) - $threshold > 0) == $lighter){
			@return $color;
		}
		@if ($lighter){
			$l: $l + 5;
		} @else {
			$l: $l - 5;
		}
		@if ($l > 100){
			$notfound: false;
			@return #fff;
		}
		@if ($l < 0){
			$notfound: false;
			@return #000;
		}
	}
	@debug "Not found any color match threshold...";
	@return $color;
}


@mixin luma-colorise($color, $link, $background, $color-threshold: 5){
	@if (luma($background) > 128){
		$threshold: luma($background) - 150;
		$color: luma-threshold($color, $threshold, false);
		$link: luma-threshold($link, $threshold, false);
		@include dark-colorise($color, $link, $background, $color-threshold);
	} @else {
		$threshold: luma($background) + 150;
		$color: luma-threshold($color, $threshold);
		$link: luma-threshold($link, $threshold);
		@include light-colorise($color, $link, $background, $color-threshold);
	}
}

@mixin colorise($color, $link, $background, $threshold: 5){
  @if (lightness($background) > 50) {
		/** This is a light background. Make sure its lightness is above 80 **/
		@if (lightness($background) < 75){
			$background: hsl(hue($background), saturation($background), 80);
		}
		// The lightness of the text and link should be less than 30
		@if (lightness($color) > 15){
			$color: hsl(hue($color), saturation($color), 15);
		}
		@if (lightness($link) > 15){
			$link: hsl(hue($link), saturation($link), 15);
		}
		/**
		Results of a light background in dark text
		**/
		@include dark-colorise($color, $link, $background, $threshold);
	} @else {
		/** This is a dark background. Make sure its lightness is less than 30 **/
		@if (lightness($background) > 25){
			$background: hsl(hue($background), saturation($background), 15);
		}
		@if (lightness($color) < 85){
			$color: hsl(hue($color), saturation($color), 85);
		}
		@if (lightness($link) < 85){
			$link: hsl(hue($link), saturation($link), 85);
		}
		@include light-colorise($color, $link, $background, $threshold);
	}
}


/** Assign 2 dark color with a light background **/
@mixin dark-colorise($color, $link, $background-color, $threshold: 10){
	$base-color:     		$color;
	$alt-color:  		 		lighten($base-color, $threshold);
	$base-background:  	$background-color;
	$link-color:        $link;
	$alt-background:  	darken(hsl(hue($link), saturation($link), lightness($background-color)), $threshold);


	$quiet-color:    lighten($base-color, 2*$threshold);
	$loud-color:     darken($base-color, 1.333 * $threshold);
	$header-color:   darken($base-color, 0.667 * $threshold);

	$header-background:   darken($alt-background, 1.333 * $threshold);
	$loud-background:     darken($base-background, 1.333 * $threshold);
	$quiet-background:    darken($base-background, 0.667 * $threshold);

	$link-hover-color:   darken($link-color, 1.333 * $threshold);
	$link-focus-color:   darken($link-color, 0.667 * $threshold);
	$link-active-color:  lighten($link-hover-color, $threshold);
	$link-visited-color: darken($link, $threshold);

	$base-table-header-color: darken($alt-background, 0.667 * $threshold);
	$base-table-stripe-color: darken(hsl(hue($base-color), saturation($link), lightness($base-background)), 0.667 * $threshold);
}

/** Assign 2 light color with a dark background **/
@mixin light-colorise($color, $link, $background-color, $threshold: 10){
	$base-color:     			$color;
	$alt-color:  		 		darken($base-color, $threshold);
	$link-color:         	$link;

	$base-background:  		$background-color;

	$alt-background:  		darken(hsl(hue($link), saturation($link), lightness($background-color)), $threshold);

	$loud-color:    darken($base-color, 2*$threshold);
	$quiet-color:     darken($base-color, 1.333 * $threshold);
	$header-color:   lighten($base-color, 0.667 * $threshold);

	$header-background:  lighten($alt-background, 1.333*$threshold);
	$loud-background:    lighten($base-background, 1.333 * $threshold);
	$quiet-background:   lighten($base-background, 0.667 * $threshold);

	$link-hover-color:   lighten($link-color, 1.333 * $threshold);
	$link-focus-color:   lighten($link-color, 0.667 * $threshold);
	$link-active-color:  darken($link-hover-color, $threshold);
	$link-visited-color: lighten($link, $threshold);

	$base-table-header-color: $loud-background;
	$base-table-stripe-color: $quiet-background;
}

/** Save current color scheme for later **/
@mixin colorise-save(){
	$colorise-pallete: $base-color $alt-color $quiet-color $loud-color $header-color $base-background $alt-background $quiet-background $loud-background $header-background $link-color $link-hover-color $link-focus-color $link-active-color $link-visited-color $base-table-header-color $base-table-stripe-color;
}
/** Restore the color settings from $colorise-pallete **/
@mixin colorise-restore(){
	$base-color: nth($colorise-pallete, 1);
	$alt-color: nth($colorise-pallete, 2);
	$quiet-color: nth($colorise-pallete, 3);
	$loud-color: nth($colorise-pallete, 4);
	$header-color: nth($colorise-pallete, 5);
	$base-background: nth($colorise-pallete, 6);
	$alt-background: nth($colorise-pallete, 7);
	$quiet-background: nth($colorise-pallete, 8);
	$loud-background: nth($colorise-pallete, 9);
	$header-background: nth($colorise-pallete, 10);
	$link-color: nth($colorise-pallete, 11);
	$link-hover-color: nth($colorise-pallete, 12);
	$link-focus-color: nth($colorise-pallete, 13);
	$link-active-color: nth($colorise-pallete, 14);
	$link-visited-color: nth($colorise-pallete, 15);
	$base-table-header-color: nth($colorise-pallete, 16);
	$base-table-stripe-color: nth($colorise-pallete, 17);
}

// Usage:
//HTML:
//<div class="demo-section">

//</div>
//div.classname {
//	@include colorise-test;
//}

@mixin colorise-info($color){
	background-color: $color;
	color: contrast-color($color, black, white);
	&:after {
		content: "Hex: #{$color} - RGB: #{red($color)}, #{green($color)}, #{blue($color)} - HSL:  #{hue($color)}, #{saturation($color)}, #{lightness($color)} - Luma: #{luma($color)}";
		color: gray;
		background-color: white;
		display: block;
		font-size: 75%;
		text-align: right;
	}
}
@mixin colorise-test(){
	background: $base-background;
	.base-color   		{ @include colorise-info($base-color); }
	.alt-color   			{ @include colorise-info($alt-color);	}
	.quiet-color   		{ @include colorise-info($quiet-color); }
	.loud-color   		{ @include colorise-info($loud-color); }
	h1,h2,h3,h4,h5,h6,.header-color   	{ @include colorise-info($header-color); }

	.base-background   	{ @include colorise-info($base-background); }
	.alt-background   	{ @include colorise-info($alt-background); }
	.quiet-background   { @include colorise-info($quiet-background); }
	.loud-background   	{ @include colorise-info($loud-background); }
	.block-title, .header-background  { @include colorise-info($header-background); }

	.link-color   			{ @include colorise-info($link-color); }
	.link-focus-color   { @include colorise-info($link-focus-color); }
	.link-hover-color   { @include colorise-info($link-hover-color); }
	.link-active-color  { @include colorise-info($link-active-color); }
	.link-visited-color { @include colorise-info($link-visited-color); }
	.base-table-header-color { @include colorise-info($base-table-header-color); }
	.base-table-stripe-color { @include colorise-info($base-table-stripe-color); }
}

@mixin colorise-analogous($original-color) {
	$support-color:adjust-hue($original-color,30);
	$accent-color:adjust-hue($original-color,-30);
	@include colorise($support-color, $accent-color, $original-color);
}

@mixin colorise-triadic($original-color) {
	$support-color:adjust-hue($original-color,120);
	$accent-color:adjust-hue($original-color,-120);
	@include colorise($support-color, $accent-color, $original-color);
}

@mixin colorise-complement($original-color) {
	$support-color:adjust-hue($original-color,210);
	$accent-color:adjust-hue($original-color,150);
	@include colorise($support-color, $accent-color, $original-color);
}

@mixin luma-colorise-analogous($original-color) {
	$support-color:adjust-hue($original-color,30);
	$accent-color:adjust-hue($original-color,-30);
	@include luma-colorise($support-color, $accent-color, $original-color);
}

@mixin luma-colorise-triadic($original-color) {
	$support-color:adjust-hue($original-color,120);
	$accent-color:adjust-hue($original-color,-120);
	@include luma-colorise($support-color, $accent-color, $original-color);
}

@mixin luma-colorise-complement($original-color) {
	$support-color:adjust-hue($original-color,210);
	$accent-color:adjust-hue($original-color,150);
	@include luma-colorise($support-color, $accent-color, $original-color);
}


/** Color schemes **/

/** Minimal Colorise the region or entire page **/
@mixin colorise-me($nested: true) {
	@if ($nested){
		color: $base-color;
		background-color: $base-background;
	} @else {
		body { color: $base-color; background-color: $base-background; }
	}
	#{headers(all)} {
		color: $header-color;
		a {
			@include link-colors($link-color, $link-hover-color, $link-active-color, $link-visited-color, $link-focus-color);
		}
	}
	a {
		@include link-colors($link-color, $link-hover-color, $link-active-color, $link-visited-color, $link-focus-color);
	}
	a.active {
		color: $link-active-color;
	}
	a.hover {
		color: $link-hover-color;
	}
}
/** Colorise the region or entire page using Blueprint CSS colors **/
@mixin colorise-bp($nested: true) {
	@include colorise-me($nested);
	hr { background: $alt-color; }
  abbr, acronym, ins {
		border-bottom: 1px dotted $quiet-color;
	}
 	address 			{ color: $alt-color; }
	blockquote 				{ background-color: $alt-background;	border-color: $quiet-color;
		&:before, &:after { color: $quiet-color; } }
	thead th {
		background-color: $base-table-header-color;
  }
  tbody tr {
    &.odd, &:nth-child(2n+1) {
      td { background-color: $base-background; }
      th { background-color: $base-background; }
    }
		&.even, &:nth-child(2n) {
    	td { background-color: $base-table-stripe-color; 	}
    	th { background-color: $alt-background; }
  	}
  }
  tfoot {
    th, td {
      background-color:  $base-table-header-color;
		}
	}
 	caption         { background-color: $loud-background; }
	kbd 						{ color: $loud-color; background-color: $quiet-background; border-color: $loud-background; }
	var 						{ color: $loud-color; }
	samp, del 			{ color: $quiet-color; }
	code						{ color: $header-color; background-color: $quiet-background; border-color: $loud-background; }
	pre							{ background-color: $loud-background; }
}

/** Solarize colors **/
$base03:    #002b36;
$base02:    #073642;
$base01:    #586e75;
$base00:    #657b83;
$base0:     #839496;
$base1:     #93a1a1;
$base2:     #eee8d5;
$base3:     #fdf6e3;
$yellow:    #b58900;
$orange:    #cb4b16;
$red:       #dc322f;
$magenta:   #d33682;
$violet:    #6c71c4;
$blue:      #268bd2;
$cyan:      #2aa198;
$green:     #859900;
@mixin solarize-dark($nested: true){
	$base-background: $base03;
	$alt-background: $base02;
	$header-background: $red;
	$loud-background: $orange;
	$quiet-background: $yellow;

	$base-color: $base0;
	$alt-color: $base00;
	$loud-color: $magenta;
	$quiet-color: $violet;
	$header-color: $green;

	$link-color: $blue;
	$link-visited-color: $blue;
	$link-hover-color: $cyan;
	$link-active-color: $cyan;
	$link-focus-color: $cyan;

	$base-table-header-color: $base01;
	$base-table-stripe-color: $base02;

	@include colorise-bp($nested);
}

/** Solarize colors **/
@mixin solarize-light($nested: true){
	$base-background: $base3;
	$alt-background: $base2;
	$header-background: $red;
	$loud-background: $orange;
	$quiet-background: $yellow;

	$base-color: $base0;
	$alt-color: $base00;
	$loud-color: $magenta;
	$quiet-color: $violet;
	$header-color: $green;

	$link-color: $blue;
	$link-visited-color: $blue;
	$link-hover-color: $cyan;
	$link-active-color: $cyan;
	$link-focus-color: $cyan;

	$base-table-header-color: $base01;
	$base-table-stripe-color: $base02;

	@include colorise-bp($nested);
}
